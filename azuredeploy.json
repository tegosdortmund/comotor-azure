{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",

  "parameters": {
    "azureStorageKey": {
      "type": "securestring",
      "metadata": {
        "description": "Provide the key to the azure storage"
      }
    },
    "employeeCode": {
      "type": "string",
      "allowedValues": [
        "AO",
        "HW",
        "ME",
        "MF",
        "MJ",
        "RK",
        "SB",
        "ST",
        "YELO"
      ],
      "metadata": {
        "description": "Select a inquirer name"
      }
    },
    "customerName": {
      "type": "string",
      "defaultValue": "ctrmain",
      "metadata": {
        "description": "Select a name for your solution"
      }
    },
    "vmAdminUserName": {
      "type": "string",
      "defaultValue": "vmAdmin",
      "metadata": {
        "description": "Select a username for the VM"
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "defaultValue": "vmAdmin2015",
      "metadata": {
        "description": "Select a password for the VM"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A2",
      "allowedValues": [
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3"
      ],
      "metadata": {
        "description": "Select the VM size"
      }
    },
    "navVersion": {
      "type": "string",
      "defaultValue": "2016",
      "allowedValues": [
        "2016"
      ],
      "metadata": {
        "description": "Select Microsoft Dynamics NAV version"
      }
    },
    "country": {
      "type": "string",
      "defaultValue": "W1-International",
      "allowedValues": [
        "W1-International",
        "DE-Germany",
        "NL-Netherlands"
      ],
      "metadata": {
        "Description": "Select Microsoft Dynamics NAV country version"
      }
    },
    "SSMS": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [ "Yes", "No" ],
      "metadata": {
        "Description": "Select if SSMS should be available"
      }
    },
    "TFS": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [ "Yes", "No" ],
      "metadata": {
        "Description": "Select if TFS support should be available"
      }
    },
    "tfsUserName": {
      "type": "string",
      "metadata": {
        "description": "Provide a TFS username"
      }
    },
    "tfsUserPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Provide a TFS password"
      }
    },
    "clickOnce": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [ "Yes", "No" ],
      "metadata": {
        "Description": "Select if ClickOnce should be available"
      }
    },
    "navUser": {
      "type": "string",
      "defaultValue": "Felix,Daniel",
      "metadata": {
        "Description": "Provide a comma separated list of NAV users"
      }
    },
    "navUserPW": {
      "type": "string",
      "defaultValue": "Felix123,Daniel123",
      "metadata": {
        "Description": "Provide a comma separated list of NAV user passwords"
      }
    }
  },

  "variables": {
    "lowerCaseEmployeeCode": "[toLower(parameters('employeeCode'))]",
    "lowerCaseCustomerName": "[toLower(replace(parameters('customerName'), ' ', ''))]",

    "storageAccountName": "[concat(variables('lowerCaseEmployeeCode'), variables('lowerCaseCustomerName'), 'storage')]",
    "vmStorageAccountType": "Standard_LRS",
    "vmStorageAccountContainerName": "vhds",

    "vmName": "[concat(variables('lowerCaseEmployeeCode'), variables('lowerCaseCustomerName'), 'vm')]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",

    "nicName": "[concat(variables('lowerCaseEmployeeCode'), variables('lowerCaseCustomerName'), 'nic')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "[concat(variables('lowerCaseEmployeeCode'), variables('lowerCaseCustomerName'), 'subnet')]",
    "subnetPrefix": "10.0.0.0/24",

    "domainName": "[concat(variables('lowerCaseEmployeeCode'), variables('lowerCaseCustomerName'), 'dns')]",
    "publicIPAddressType": "Dynamic",
    "virtualNetworkName": "[concat(variables('lowerCaseEmployeeCode'), variables('lowerCaseCustomerName'), 'vnet')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[concat(variables('lowerCaseEmployeeCode'), variables('lowerCaseCustomerName'), 'sec')]",

    "accountid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
  },

  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "[variables('storageAccountName')]"
      },
      "properties": {
        "accountType": "[variables('vmStorageAccountType')]"
      }
    },


    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('domainName')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "[variables('domainName')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('lowerCaseCustomerName')]"
        }
      }
    },


    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "[variables('virtualNetworkName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },


    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('domainName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('domainName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },


    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "HTTP",
            "properties": {
              "description": "Http access",
              "protocol": "Tcp",
              "sourcePortRange": "80",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "HTTPS",
            "properties": {
              "description": "Http access over Secure Socket Layer",
              "protocol": "Tcp",
              "sourcePortRange": "443",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          },
          {
            "name": "Client",
            "properties": {
              "description": "Access for Windows Client",
              "protocol": "Tcp",
              "sourcePortRange": "7046",
              "destinationPortRange": "7046",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          },
          {
            "name": "Soap",
            "properties": {
              "description": "Access to Soap Web Services",
              "protocol": "Tcp",
              "sourcePortRange": "7047",
              "destinationPortRange": "7047",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 400,
              "direction": "Inbound"
            }
          },
          {
            "name": "OData",
            "properties": {
              "description": "Access to OData Services",
              "protocol": "Tcp",
              "sourcePortRange": "7048",
              "destinationPortRange": "7048",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 500,
              "direction": "Inbound"
            }
          },
          {
            "name": "ClickOnce",
            "properties": {
              "description": "Access to Click Once",
              "protocol": "Tcp",
              "sourcePortRange": "9004",
              "destinationPortRange": "9004",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 600,
              "direction": "Inbound"
            }
          },
          {
            "name": "Help",
            "properties": {
              "description": "Access to Help Server",
              "protocol": "Tcp",
              "sourcePortRange": "49000",
              "destinationPortRange": "49000",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 700,
              "direction": "Inbound"
            }
          }
        ]
      }
    },


    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "VirtualMachine"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('vmAdminUserName')]",
          "adminPassword": "[parameters('vmAdminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftDynamicsNAV",
            "offer": "DynamicsNAV",
            "sku": "[parameters('navVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('vmName'),'_', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },


    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/initialize-comotor')]",
      "location": "[variables('location')]",
      "dependsOn": [ "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]" ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/tegosdortmund/comotor-azure/master/start.ps1"
          ],
          "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File start.ps1', ' -navVersion ', parameters('navVersion'), ' -country ', parameters('country'), ' -SSMS ', parameters('SSMS'), ' -vmAdminUserName ', parameters('vmAdminUserName'), ' -vmAdminPassword ', parameters('vmAdminPassword'), ' -publicMachineName ', reference(variables('domainName')).dnsSettings.fqdn, ' -navUser ', parameters('navUser'), ' -navUserPassword ', parameters('navUserPW'), ' -clickOnce ', parameters('clickOnce'), ' -azureStorageKey ', parameters('azureStorageKey'), ' -TFS ', parameters('TFS'), ' -customerName \"', parameters('customerName'), '\" -tfsUserName ', parameters('tfsUserName'), ' -tfsUserPassword ',  parameters('tfsUserPassword') )]"
        },
        "protectedSettings": {
          "storageAccountName": "[variables('storageAccountName')]",
          "storageAccountKey": "[listKeys(variables('accountid'),'2015-06-15').key1]"
        }
      }
    }

  ],


  "outputs": {
    "Landing Page": {
      "type": "string",
      "value": "[concat('http://', reference(variables('domainName')).dnsSettings.fqdn)]"
    },
    "RDP Session": {
      "type": "string",
      "value": "[concat('http://', reference(variables('domainName')).dnsSettings.fqdn, '/', variables('vmName'), '.rdp')]"
    },
    "Click Once": {
      "type": "string",
      "value": "[concat('http://', reference(variables('domainName')).dnsSettings.fqdn, '/NAV')]"
    },
    "Web Client": {
      "type": "string",
      "value": "[concat('https://', reference(variables('domainName')).dnsSettings.fqdn, '/NAV/WebClient')]"
    },
    "Tablet Client": {
      "type": "string",
      "value": "[concat('https://', reference(variables('domainName')).dnsSettings.fqdn, '/NAV/WebClient/tablet.aspx')]"
    },
    "Phone Client": {
      "type": "string",
      "value": "[concat('https://', reference(variables('domainName')).dnsSettings.fqdn, '/NAV/WebClient/phone.aspx')]"
    },
    "SOAP Services": {
      "type": "string",
      "value": "[concat('https://', reference(variables('domainName')).dnsSettings.fqdn, ':7047/NAV/WS/Services')]"
    },
    "OData Services": {
      "type": "string",
      "value": "[concat('https://', reference(variables('domainName')).dnsSettings.fqdn, ':7048/NAV/OData/')]"
    }
  }
  
}

